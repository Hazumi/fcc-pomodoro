/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';
	
	var timer = document.getElementById('timer');
	
	var pomodoro = new Timer({
	    tick: 1,
	    ontick: function ontick(sec) {
	        timer.innerHTML = Math.round(sec / 1000);
	        console.log('interval', sec);
	    },
	    onstart: function onstart() {
	        console.log('STARTING');
	    }
	});
	
	var duration = 3;
	
	var pomoTime = 10;
	
	// defining options using on
	pomodoro.start(pomoTime).on('end', function () {
	
	    console.log('timer ended');
	    // this.start(4).off('end');
	});
	
	//start timer for 10 seconds

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNWE5ZjIyNDM0ZDg2YTY3OWRjODYiLCJ3ZWJwYWNrOi8vLy4vanMvbWFpbi5qcyJdLCJuYW1lcyI6WyJ0aW1lciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJwb21vZG9ybyIsIlRpbWVyIiwidGljayIsIm9udGljayIsInNlYyIsImlubmVySFRNTCIsIk1hdGgiLCJyb3VuZCIsImNvbnNvbGUiLCJsb2ciLCJvbnN0YXJ0IiwiZHVyYXRpb24iLCJwb21vVGltZSIsInN0YXJ0Iiwib24iXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7Ozs7QUN0Q0EsS0FBTUEsUUFBUUMsU0FBU0MsY0FBVCxDQUF3QixPQUF4QixDQUFkOztBQUVBLEtBQU1DLFdBQVcsSUFBSUMsS0FBSixDQUFVO0FBQ3ZCQyxXQUFPLENBRGdCO0FBRXZCQyxhQUFTLGdCQUFVQyxHQUFWLEVBQWU7QUFDcEJQLGVBQU1RLFNBQU4sR0FBa0JDLEtBQUtDLEtBQUwsQ0FBV0gsTUFBTSxJQUFqQixDQUFsQjtBQUNBSSxpQkFBUUMsR0FBUixDQUFZLFVBQVosRUFBd0JMLEdBQXhCO0FBQ0gsTUFMc0I7QUFNdkJNLGNBQVUsbUJBQVc7QUFDakJGLGlCQUFRQyxHQUFSLENBQVksVUFBWjtBQUNIO0FBUnNCLEVBQVYsQ0FBakI7O0FBV0EsS0FBSUUsV0FBVyxDQUFmOztBQUVBLEtBQUlDLFdBQVcsRUFBZjs7QUFFQTtBQUNBWixVQUFTYSxLQUFULENBQWVELFFBQWYsRUFBeUJFLEVBQXpCLENBQTRCLEtBQTVCLEVBQW1DLFlBQVk7O0FBRTNDTixhQUFRQyxHQUFSLENBQVksYUFBWjtBQUNBO0FBQ0gsRUFKRDs7QUFNQSw2QiIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRpZDogbW9kdWxlSWQsXG4gXHRcdFx0bG9hZGVkOiBmYWxzZVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIDVhOWYyMjQzNGQ4NmE2NzlkYzg2IiwiY29uc3QgdGltZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGltZXInKTtcblxuY29uc3QgcG9tb2Rvcm8gPSBuZXcgVGltZXIoe1xuICAgIHRpY2sgOiAxLFxuICAgIG9udGljayA6IGZ1bmN0aW9uIChzZWMpIHtcbiAgICAgICAgdGltZXIuaW5uZXJIVE1MID0gTWF0aC5yb3VuZChzZWMgLyAxMDAwKTtcbiAgICAgICAgY29uc29sZS5sb2coJ2ludGVydmFsJywgc2VjKTtcbiAgICB9LFxuICAgIG9uc3RhcnQgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1NUQVJUSU5HJyk7XG4gICAgfVxufSk7XG5cbmxldCBkdXJhdGlvbiA9IDM7XG5cbmxldCBwb21vVGltZSA9IDEwO1xuXG4vLyBkZWZpbmluZyBvcHRpb25zIHVzaW5nIG9uXG5wb21vZG9yby5zdGFydChwb21vVGltZSkub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcblxuICAgIGNvbnNvbGUubG9nKCd0aW1lciBlbmRlZCcpO1xuICAgIC8vIHRoaXMuc3RhcnQoNCkub2ZmKCdlbmQnKTtcbn0pO1xuXG4vL3N0YXJ0IHRpbWVyIGZvciAxMCBzZWNvbmRzXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9qcy9tYWluLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==