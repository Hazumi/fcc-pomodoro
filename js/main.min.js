/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';
	
	var $timer = document.getElementById('timer');
	var $duration = document.getElementById('duration');
	
	var duration = document.getElementById('duration').value;
	var paused = false;
	
	duration = 4 * 60; // 4 minutes
	duration = 3;
	
	var pomodoro = new Timer({
	    tick: 1,
	    ontick: function ontick(sec) {
	        $timer.innerHTML = Math.round(sec / 1000);
	        console.log('interval', sec);
	    },
	    onstart: function onstart() {
	        console.log('STARTING');
	    },
	    onpause: function onpause() {
	        console.log('paused');
	    }
	});
	
	$timer.addEventListener('click', function () {
	    if (paused) {
	        pomodoro.start();
	        paused = false;
	    } else {
	        pomodoro.pause();
	        paused = true;
	    }
	});
	
	// defining options using on
	pomodoro.start(duration).on('end', function () {
	    //$timer.innerHTML = "0";
	    this.start(4).off('end');
	});

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNWY3ZjFhNGQ5NGEwNzFkM2M4ZmQiLCJ3ZWJwYWNrOi8vLy4vanMvbWFpbi5qcyJdLCJuYW1lcyI6WyIkdGltZXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiJGR1cmF0aW9uIiwiZHVyYXRpb24iLCJ2YWx1ZSIsInBhdXNlZCIsInBvbW9kb3JvIiwiVGltZXIiLCJ0aWNrIiwib250aWNrIiwic2VjIiwiaW5uZXJIVE1MIiwiTWF0aCIsInJvdW5kIiwiY29uc29sZSIsImxvZyIsIm9uc3RhcnQiLCJvbnBhdXNlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInN0YXJ0IiwicGF1c2UiLCJvbiIsIm9mZiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7OztBQ3RDQSxLQUFNQSxTQUFTQyxTQUFTQyxjQUFULENBQXdCLE9BQXhCLENBQWY7QUFDQSxLQUFNQyxZQUFZRixTQUFTQyxjQUFULENBQXdCLFVBQXhCLENBQWxCOztBQUVBLEtBQUlFLFdBQVdILFNBQVNDLGNBQVQsQ0FBd0IsVUFBeEIsRUFBb0NHLEtBQW5EO0FBQ0EsS0FBSUMsU0FBUyxLQUFiOztBQUVBRixZQUFXLElBQUksRUFBZixDLENBQW1CO0FBQ25CQSxZQUFXLENBQVg7O0FBRUEsS0FBTUcsV0FBVyxJQUFJQyxLQUFKLENBQVU7QUFDdkJDLFdBQU0sQ0FEaUI7QUFFdkJDLGFBQVEsZ0JBQVVDLEdBQVYsRUFBZTtBQUNuQlgsZ0JBQU9ZLFNBQVAsR0FBbUJDLEtBQUtDLEtBQUwsQ0FBV0gsTUFBSSxJQUFmLENBQW5CO0FBQ0FJLGlCQUFRQyxHQUFSLENBQVksVUFBWixFQUF3QkwsR0FBeEI7QUFDSCxNQUxzQjtBQU12Qk0sY0FBUyxtQkFBVztBQUNoQkYsaUJBQVFDLEdBQVIsQ0FBWSxVQUFaO0FBQ0gsTUFSc0I7QUFTdkJFLGNBQVMsbUJBQVc7QUFDaEJILGlCQUFRQyxHQUFSLENBQVksUUFBWjtBQUNIO0FBWHNCLEVBQVYsQ0FBakI7O0FBY0FoQixRQUFPbUIsZ0JBQVAsQ0FBd0IsT0FBeEIsRUFBaUMsWUFBVztBQUN4QyxTQUFJYixNQUFKLEVBQVk7QUFDUkMsa0JBQVNhLEtBQVQ7QUFDQWQsa0JBQVMsS0FBVDtBQUNILE1BSEQsTUFHTztBQUNIQyxrQkFBU2MsS0FBVDtBQUNBZixrQkFBUyxJQUFUO0FBQ0g7QUFDSixFQVJEOztBQVVBO0FBQ0FDLFVBQVNhLEtBQVQsQ0FBZWhCLFFBQWYsRUFBeUJrQixFQUF6QixDQUE0QixLQUE1QixFQUFtQyxZQUFZO0FBQzNDO0FBQ0EsVUFBS0YsS0FBTCxDQUFXLENBQVgsRUFBY0csR0FBZCxDQUFrQixLQUFsQjtBQUNILEVBSEQsRSIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRpZDogbW9kdWxlSWQsXG4gXHRcdFx0bG9hZGVkOiBmYWxzZVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIDVmN2YxYTRkOTRhMDcxZDNjOGZkIiwiY29uc3QgJHRpbWVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpbWVyJyk7XG5jb25zdCAkZHVyYXRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHVyYXRpb24nKTtcblxubGV0IGR1cmF0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2R1cmF0aW9uJykudmFsdWVcbmxldCBwYXVzZWQgPSBmYWxzZTtcblxuZHVyYXRpb24gPSA0ICogNjA7IC8vIDQgbWludXRlc1xuZHVyYXRpb24gPSAzO1xuXG5jb25zdCBwb21vZG9ybyA9IG5ldyBUaW1lcih7XG4gICAgdGljazogMSxcbiAgICBvbnRpY2s6IGZ1bmN0aW9uIChzZWMpIHtcbiAgICAgICAgJHRpbWVyLmlubmVySFRNTCA9IE1hdGgucm91bmQoc2VjLzEwMDApO1xuICAgICAgICBjb25zb2xlLmxvZygnaW50ZXJ2YWwnLCBzZWMpO1xuICAgIH0sXG4gICAgb25zdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdTVEFSVElORycpO1xuICAgIH0sXG4gICAgb25wYXVzZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdwYXVzZWQnKTtcbiAgICB9XG59KTtcblxuJHRpbWVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgaWYgKHBhdXNlZCkge1xuICAgICAgICBwb21vZG9yby5zdGFydCgpO1xuICAgICAgICBwYXVzZWQgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBwb21vZG9yby5wYXVzZSgpO1xuICAgICAgICBwYXVzZWQgPSB0cnVlO1xuICAgIH1cbn0pO1xuXG4vLyBkZWZpbmluZyBvcHRpb25zIHVzaW5nIG9uXG5wb21vZG9yby5zdGFydChkdXJhdGlvbikub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAvLyR0aW1lci5pbm5lckhUTUwgPSBcIjBcIjtcbiAgICB0aGlzLnN0YXJ0KDQpLm9mZignZW5kJyk7XG59KTtcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vanMvbWFpbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=